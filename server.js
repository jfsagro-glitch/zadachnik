const express = require('express');
const path = require('path');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(helmet({
  contentSecurityPolicy: false, // –î–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞ –æ—Ç–∫–ª—é—á–∞–µ–º CSP
  crossOriginEmbedderPolicy: false
}));
app.use(compression());
app.use(cors());
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('public'));

// API Routes —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
try {
  const demoRoutes = require('./src/backend/routes/demo');
  const taskRoutes = require('./src/backend/routes/tasks');
  const userRoutes = require('./src/backend/routes/users');
  
  app.use('/api/demo', demoRoutes);
  app.use('/api/tasks', taskRoutes);
  app.use('/api/users', userRoutes);
  
  console.log('‚úÖ API –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤:', error.message);
  console.log('‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±–µ–∑ API –º–∞—Ä—à—Ä—É—Ç–æ–≤');
}

// Health check
app.get('/health', (req, res) => {
  res.json({ 
    status: 'OK', 
    timestamp: new Date().toISOString(),
    uptime: process.uptime()
  });
});

// SPA fallback - –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤–µ–¥—É—Ç –Ω–∞ index.html
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('Error:', err);
  res.status(500).json({ 
    error: 'Internal Server Error',
    message: process.env.NODE_ENV === 'development' ? err.message : 'Something went wrong'
  });
});

app.listen(PORT, '0.0.0.0', () => {
  console.log('\n' + '='.repeat(60));
  console.log('üöÄ CURSOR Pipeline Demo –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log('='.repeat(60));
  console.log(`üìä –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:`);
  console.log(`   - –õ–æ–∫–∞–ª—å–Ω–æ: http://localhost:${PORT}`);
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Codespaces
  if (process.env.CODESPACE_NAME) {
    const codespaceUrl = `https://${process.env.CODESPACE_NAME}-3000.app.github.dev`;
    console.log(`   - GitHub Codespaces: ${codespaceUrl}`);
    console.log(`\nüéâ GitHub Codespaces –æ–±–Ω–∞—Ä—É–∂–µ–Ω!`);
    console.log(`üì± –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${codespaceUrl}`);
  } else {
    console.log(`   - –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://0.0.0.0:${PORT}`);
  }
  
  console.log(`\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã:`);
  console.log(`   - –ü–æ—Ä—Ç: ${PORT}`);
  console.log(`   - –¢–∞–π–º–∞—É—Ç —Å–µ—Å—Å–∏–π: 6 —á–∞—Å–æ–≤`);
  console.log(`   - –ú–∞–∫—Å. —Å–µ—Å—Å–∏–π: 10`);
  console.log(`   - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite (demo_sessions.db)`);
  console.log(`   - –†–µ–∂–∏–º: ${process.env.NODE_ENV || 'production'}`);
  
  console.log('\n' + '='.repeat(60));
  console.log('‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CURSOR Pipeline!');
  console.log('='.repeat(60) + '\n');
});

